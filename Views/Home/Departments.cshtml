
@{
}
<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Add your meta tags, title, and CSS links here -->
    <link rel="stylesheet" href="~/css/main.css">
    <link rel="stylesheet" href="~/css/departments.css">
    <title>Departments</title>
</head>
<body>
    

    <div class="container">
        <h2><b>Departments</b></h2>
       
        <table id="departmentsTable" class="custom-table" >
            <thead>
                <tr>
                    <th>Department</th>
                    <th>Jobs Per department</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data will be displayed here -->
            </tbody>
        </table>
    </div>

    <script defer>
        document.addEventListener('DOMContentLoaded', () => {
            const apiKey = 'RhEpGjjxXIgbBJK1OqavYjI0eH8stPCZ9Ad3I4LT';
            const apiUrl = 'https://data.cityofnewyork.us/resource/kpav-sd4t.json';

            const departmentsTable = document.getElementById('departmentsTable');
            const tableBody = departmentsTable.querySelector('tbody');

            function fetchDepartmentsData() {
                fetch(apiUrl)
                    .then(response => response.json())
                    .then(data => {
                        // Calculate the number of jobs for each agency
                        const agencyCounts = calculateAgencyCounts(data);

                        // Clear the existing table rows
                        tableBody.innerHTML = '';

                        // Iterate over agency counts and create table rows
                        for (const agency in agencyCounts) {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                        <td>${agency}</td>
                        <td>${agencyCounts[agency]}</td>
                    `;
                            tableBody.appendChild(row);
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching department data:', error);
                    });
            }

            // Calculate the number of jobs for each agency
            function calculateAgencyCounts(data) {
                const agencyCounts = {};

                data.forEach(item => {
                    const agency = item.agency;
                    if (!agencyCounts[agency]) {
                        agencyCounts[agency] = 1;
                    } else {
                        agencyCounts[agency]++;
                    }
                });

                return agencyCounts;
            }

            // Initial fetch on page load
            fetchDepartmentsData();
        });


    </script>
</body>
</html>
